jobs:
- job: 'TestLinux'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python39-Linux:
        python.version: '3.9'
    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
  - script: sudo apt-get update
    displayName: 'AptGet Update'
  - script: sudo apt-get install -y pandoc
    displayName: 'Install Pandoc'
  - script: sudo apt-get install -y inkscape
    displayName: 'Install Inkscape'
  - script: sudo apt-get install -y graphviz
    displayName: 'Install Graphviz'
  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'
  - script: pip install -r requirements.txt
    displayName: 'Install Requirements'
  - script: pip install -r requirements-dev.txt
    displayName: 'Install Requirements dev'
  - script: pip install onnxruntime-training --extra-index-url https://download.onnxruntime.ai/onnxruntime_nightly_cpu.html
    displayName: 'Install onnxruntime-training'
  - script: |
      python -u setup.py build_ext --inplace
    displayName: 'Runs Unit Tests'
  - script: |
      python -m pytest _unittests -v -v
    displayName: 'Runs Unit Tests'
  - script: |
      python -u setup.py bdist_wheel
    displayName: 'Build Package'
  - script: |
      python -m onnxcustom check
    displayName: 'Check speed'
#  - script: |
#      python -u setup.py build_sphinx
#    displayName: 'Builds Documentation'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'wheel-linux-$(python.version)'
      targetPath: 'dist'

- job: 'TestMac'
  pool:
    vmImage: 'macOS-latest'
  strategy:
    matrix:
      Python39-Mac:
        python.version: '3.9'
    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
  - script: gcc --version
    displayName: 'gcc version'
  - script: |
          brew update
    displayName: 'brew update'
  - script: export
    displayName: 'export'
  - script: gcc --version
    displayName: 'gcc version'
  - script: brew install llvm
    displayName: 'install llvm'
  - script: brew install libomp
    displayName: 'Install omp'
  - script: brew install p7zip
    displayName: 'Install p7zip'
#  - script: brew install pandoc
#    displayName: 'Install Pandoc'
#  - script: brew install graphviz
#    displayName: 'Install Graphviz'
  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'
  - script: brew install pybind11
    displayName: 'Install pybind11'
  - script: pip install -r requirements.txt
    displayName: 'Install Requirements'
  - script: pip install -r requirements-dev.txt
    displayName: 'Install Requirements dev'
  - script: pip install onnxruntime
    displayName: 'Install onnxruntime'
  - script: |
          export MACOSX_DEPLOYMENT_TARGET=10.13
          python setup.py build_ext --inplace
    displayName: 'Build package'
  - script: |
      python -m pytest _unittests -v -v
    displayName: 'Runs Unit Tests'
  - script: |
      python -u setup.py bdist_wheel
    displayName: 'Build Package'
  - script: |
      python -m onnxcustom check
    displayName: 'Check speed'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'wheel-mac-$(python.version)'
      targetPath: 'dist'

